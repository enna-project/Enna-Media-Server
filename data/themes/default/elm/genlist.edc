group { name: "elm/genlist/item/default/enna";
   alias: "elm/genlist/item_odd/default/enna";
   alias: "elm/genlist/item_compress_odd/default/enna";
   alias: "elm/list/item/enna";
   alias: "elm/list/item_odd/enna";
   alias: "elm/list/item_compress/enna";
   alias: "elm/list/item_compress_odd/enna";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.swallow.icon elm.swallow.starred elm.swallow.end";
   data.item: "treesize" "5";
   //      data.item: "states" "";
   images {
      image: "list_bg.png" COMP;
      image: "list_selected.png" COMP;
   }
   parts {

      part {
         name:           "event";
         type:           RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      
      part { name: "bg";

         mouse_events: 0;
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }

      part { name: "selector";

         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel2.offset: 1 1;
            image {
               normal: "list_selected.png";
               border: 4 4 4 4;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }


      part { name: "elm.swallow.pad";
         type: SWALLOW;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {

               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {

               relative: 0.0  1.0;
               offset:   4   -4;
            }
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.starred";
         type: SWALLOW;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               to: "elm.swallow.end";
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               to: "elm.swallow.end";
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         type: SWALLOW;
         mouse_events: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.text";
         type:           TEXT;
         //effect:         SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            //               min: 16 16;
            fixed: 1 0;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   8 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: 255 255 255 255;
            color3: 0 0 0 30;
            text {
               font: "Roboto Th";
               size: 54;
               min: 0 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color3: 0 0 0 30;
         }
      }

   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "selector";
         target:  "elm.text";
         transition: ACCELERATE 0.3;
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "selector";
         target:  "elm.text";
         transition: DECELERATE 0.3;
      }
   }
}



group { name: "elm/genlist/item/media/default";
   alias: "elm/genlist/item_odd/media/default";
   alias: "elm/genlist/item_compress_odd/media/default";
   alias: "elm/genlist/item_compress/media/default";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "texts" "name description";
   data.item: "contents" "elm.swallow.icon elm.swallow.end";
   data.item: "treesize" "16";
   //      data.item: "states" "";
   images {
      image: "list_bg.png" COMP;
      image: "list_selected.png" COMP;
   }
   parts {
      part {
         name:           "event";
         type:           RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }

      part { name: "bg";
         mouse_events: 0;
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }

      part { name: "selector";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            image {
               normal: "list_selected.png";
               border: 4 4 4 4;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }


      part { name: "elm.swallow.pad";
         type: SWALLOW;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {

               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {

               relative: 0.0  1.0;
               offset:   4   -4;
            }
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            min: 20 20;
            max: 20 20;
            aspect: 1.0 1.0;

            aspect_preference: VERTICAL;
            rel1 {
               to: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
   
      part { name: "elm.swallow.end";
         type: SWALLOW;
         mouse_events: 1;
         description { state: "default" 0.0;
            min: 16 16;
            max: 16 16;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            visible: 1;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "name";
         type:           TEXT;
         //effect:         SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            //               min: 16 16;
            fixed: 0 1;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   8 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  0.5;
               offset:   -1 -5;
            }
            //color: 172 179 191 255;
            //color3: 0 0 0 30;
            color: 200 200 200 255;
            text {
               font: "Roboto Th:style=Bold";
               size: 30;
               min: 0 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color3: 0 0 0 30;
         }
      }

      part { name: "description";
         type:           TEXT;
         //effect:         SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            //               min: 16 16;
            fixed: 1 0;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.5;
               offset:   8 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            //color: 172 179 191 255;
            //color3: 0 0 0 30;
            color: 200 200 200 255;
            text {
               font: "Roboto Th";
               size: 20;
               min: 0 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color3: 0 0 0 30;
         }
      }


   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "selector";
         target:  "name";
         target:  "description";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "selector";
         target:  "name";
         target:  "description";
         transition: LINEAR 0.1;
      }
   }
}


group { name: "elm/genlist/item/group_index_media/default";
   alias: "elm/genlist/item_compress/group_index_media/default";
   data.item: "selectraise" "on";
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.swallow.icon elm.swallow.end";
   data.item: "treesize" "20";

   parts {
      part {
         name: "event";
         type: RECT;
         repeat_events: 0;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "base";
         mouse_events: 0;
         type: RECT;
         description {
            state: "default" 0.0;
            color: 0 0 0 255;
         }
      }

      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset: 4 4;
            }
            rel2 {
               relative: 0.0  1.0;
               offset: 4 -5;
            }
         }
      }
      part { name: "elm.swallow.icon";
         //         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to_x: "elm.swallow.pad";
               relative: 1.0 0.0;
               offset: -1 4;
            }
            rel2 {
               to_x: "elm.swallow.pad";
               relative: 1.0 1.0;
               offset: -1 -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         //         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               relative: 1.0 0.0;
               offset: -5 4;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: -5 -5;
            }
         }
      }
      part { name: "elm.text";
         //         clip_to: "disclip";
         type: TEXT;
         effect: SHADOW;
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
                   //               min: 16 16;
            rel1 {
               to_x: "elm.swallow.icon";
               relative: 1.0  0.0;
               offset: 0 4;
            }
            rel2 {
               to_x: "elm.swallow.end";
               relative: 0.0  1.0;
               offset: -1 -5;
            }
            color: 200 200 200 255;
            color3: 50 50 50 255;
            text {
               font: "Roboto Th:style=Bold";
               size: 25;
               min: 1 1;
                    //                  min: 0 1;
               align: -1.0 0.5;
               text_class: "list_item";
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 224 224 224 255;
            color3: 0 0 0 64;
         }
      }
   }
}

group { name: "elm/genlist/tree/media/default";
   data.item: "selectraise" "on";
   data.item: "texts" "elm.text";
   data.item: "treesize" "5";
   //      data.item: "states" "";
   images {
      image: "tree_arrow_left.png" COMP;
      image: "tree_arrow_right.png" COMP;
      image: "tree_arrow_down.png" COMP;
   }
   parts {
      part {
         name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "reorder_bg";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -7 -7;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 9 9;
            }
         }
         description { state: "enabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
      part {
         name: "base_sh";
         mouse_events: 0;
         description {
            state: "default" 0.0;
            align: 0.0 0.0;
            min: 0 10;
            fixed: 1 1;
            rel1 {
               to: "base";
               relative: 0.0 1.0;
               offset: 0 0;
            }
            rel2 {
               to: "base";
               relative: 1.0 1.0;
               offset: -1 0;
            }
         }
         description {
            state: "default" 1.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part {
         name: "base";
         mouse_events: 0;
         description {
            state: "default" 0.0;

         }
         description {
            state: "default" 1.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 4 4;
            }

         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {
               relative: 0.0  1.0;
               offset:   4   -5;
            }
         }
      }
      part { name: "arrow";
         clip_to: "disclip";
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            min: 9 14;
            max: 9 14;
            fixed: 1 0;
            align: 0.0 0.5;
            aspect: 1.0 1.0;
            rel1 {
               to_x: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to_x: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
            image.normal: "tree_arrow_right.png";
         }
         description { state: "default" 0.1;
            inherit: "default" 0.0;
            image.normal: "tree_arrow_left.png";
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            image.normal: "tree_arrow_down.png";
            min: 14 9;
            max: 14 9;
         }
         description { state: "active" 0.1;
            inherit: "default" 0.0;
            image.normal: "tree_arrow_down.png";
            min: 14 9;
            max: 14 9;
         }
      }
     
      part { name: "elm.text";
         clip_to: "disclip";
         type:           TEXT;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
                   //               min: 16 16;
            rel1 {
               to_x:     "arrow";
               relative: 1.0  0.0;
               offset:   8 4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -1 -5;
            }
            color: 128 128 128 255;
            text {
               font: "Sans:style=Bold";
               size: 10;
               min: 1 1;
                    //                  min: 0 1;
               align: -1.0 0.5;
               text_class: "list_item";
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;

         }
      }
      part { name: "fg1";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
      part { name: "fg2";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";

         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
        // signal: elm,state,%s,active
        //   a "check" item named %s went active
        // signal: elm,state,%s,passive
        //   a "check" item named %s went passive
        // default is passive
      program {
         name:    "odd";
         signal:  "elm,state,odd";
         source:  "elm";
         action:  STATE_SET "default" 1.0;
         target:  "base_sh";
         target:  "base";
      }
      program {
         name:    "even";
         signal:  "elm,state,even";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "base_sh";
         target:  "base";
      }
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
      program {
         name:    "go_reorder_disabled";
         signal:  "elm,state,reorder,disabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "reorder_bg";
         transition: DECELERATE 0.5;
      }
      program {
         name:    "go_reorder_enabled";
         signal:  "elm,state,reorder,enabled";
         source:  "elm";
         action:  STATE_SET "enabled" 0.0;
         target:  "reorder_bg";
         transition: DECELERATE 0.5;
      }
      program {
         name:    "expand";
         signal:  "mouse,up,1";
         source:  "arrow";
         action:  SIGNAL_EMIT "elm,action,expand,toggle" "elm";
      }
      program {
         name:    "go_expanded";
         signal:  "elm,state,expanded";
         source:  "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"arrow", st, 30, vl);
            set_state(PART:"arrow", "active", vl);
         }
      }
      program {
         name:    "go_contracted";
         signal:  "elm,state,contracted";
         source:  "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"arrow", st, 30, vl);
            set_state(PART:"arrow", "default", vl);
         }
      }
      program { name: "to_rtl";
         signal: "edje,state,rtl";
         source: "edje";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"arrow", st, 30, vl);
            if (vl == 0.0) {
               set_state(PART:"arrow", st, 0.1);
            }
         }
      }
      program { name: "to_ltr";
         signal: "edje,state,ltr";
         source: "edje";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"arrow", st, 30, vl);
            if (vl == 0.1) {
               set_state(PART:"arrow", st, 0.0);
            }
         }
      }
   }
}

group { name: "elm/list/item/mainmenu";
   alias: "elm/list/item_odd/mainmenu";
   alias: "elm/list/item_compress/mainmenu";
   alias: "elm/list/item_compress_odd/mainmenu";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.swallow.icon";

   images {
      image: "list_mainmenu_selected.png" COMP;
   }
   parts {
      part {
      name:           "event";
      type:           RECT;
      repeat_events: 1;
         description {
         state: "default" 0.0;
         color: 0 0 0 0;
         }
      }

      part { name: "bg";
      mouse_events: 0;
      type: RECT;
         description { state: "default" 0.0;
         color: 0 0 0 0;
         }
      }

      part { name: "selector";
      mouse_events: 0;
         description { state: "default" 0.0;
         visible: 0;
         color: 255 255 255 0;
         rel2.offset: 1 1;
            image {
            normal: "list_mainmenu_selected.png";
            border: 0 25 8 25;
            }
         }
         description { state: "selected" 0.0;
         inherit: "default" 0.0;
         visible: 1;
         color: 255 255 255 255;
         }
      }
      part { name: "elm.text";
         type:           TEXT;
         //effect:         SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            //               min: 16 16;
            fixed: 1 0;
            rel1 {
               relative: 0.0  0.0;
               offset:   8 0;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -20 -20;
            }
            color: 255 255 255 255;
            color3: 0 0 0 30;
            text {
               font: "Roboto Th";
               size: 54;
               min: 1 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color3: 0 0 0 30;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "selector";
         target:  "elm.text";
         transition: ACCELERATE 0.3;
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "selector";
         target:  "elm.text";
         transition: DECELERATE 0.3;
      }
   }

}
